package battleship;

import entities.Aircraft;
import entities.Battleship;
import entities.Cruiser;
import entities.Destroyer;
import entities.Ship;
import entities.Submarine;

public class Main {

	/**
	 * @param args
	 */
	public static void main(String[] args) throws Exception {

		Player vince = new Player("Vince");
		Player josh = new Player("Josh");

		System.out.println("Freshly created " + josh.getName() + "'s Grid:\n");
		Screen.displayPlayerGridInConsole(josh);

		// Ship Adding Tests
		Aircraft air_test;
		Battleship battle_test;
		Cruiser cruiser_test;
		Destroyer destr_test;
		Submarine sub_test;

		try {
			air_test = new Aircraft(2, 3, Ship.HORIZONTAL);
			battle_test = new Battleship(8, 2, Ship.VERTICAL);
			cruiser_test = new Cruiser(0, 0, Ship.VERTICAL);
			destr_test = new Destroyer(5, 5, Ship.HORIZONTAL);
			sub_test = new Submarine(9, 9, Ship.HORIZONTAL);
			josh.addShipOnUserGrid(air_test);
			josh.addShipOnUserGrid(battle_test);
			josh.addShipOnUserGrid(cruiser_test);
			josh.addShipOnUserGrid(destr_test);
			josh.addShipOnUserGrid(sub_test);
		} catch (Exception e) {
			e.printStackTrace();
		}

		System.out.println("Partially completed " + josh.getName()
				+ "'s Grid:\n");
		Screen.displayPlayerGridInConsole(josh);

		//Collision exception test
		try {
			 System.out.println("Collision Test:");
			 Aircraft air_collide;
			 air_collide = new Aircraft(3, 2, Ship.VERTICAL);
			 josh.addShipOnUserGrid(air_collide);
		} catch (Exception e) {
			e.printStackTrace();
		}

		//Auto Generating grid test
		try {
			System.out.println("\n\nAutogenerated Grid:");
			 Grid auto = AI.autoGeneratedGrid(new int[]{2,1,1,2,2});
			 Screen.displayGridInConsole(auto);
		} catch (Exception e) {
			e.printStackTrace();
		}


		// Screen screen = new Screen();
		// screen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		// screen.setVisible(true);
		// screen.setLocationRelativeTo(null);// Centering

	}

}
